/*
Here's the first-touch query, in case you need it
*/
/*
WITH first_touch AS (
    SELECT user_id,
        MIN(timestamp) as first_touch_at
    FROM page_visits
    GROUP BY user_id)
SELECT ft.user_id,
    ft.first_touch_at,
    pv.utm_source,
		pv.utm_campaign
FROM first_touch ft
JOIN page_visits pv
    ON ft.user_id = pv.user_id
    AND ft.first_touch_at = pv.timestamp;
*/

--- DELETE 
/*


-- MASS CANCEL HERE -- 

-- EXERCISE 1
-- How many campaigns and sources doe coolITShirts use? 
SELECT COUNT(DISTINCT(utm_campaign)) AS 'distinct_utm_campaign'
FROM page_visits;

SELECT COUNT(DISTINCT(utm_source)) AS 'distinct_utm_source'
FROM page_visits;

-- how are they related?
SELECT DISTINCT utm_campaign, utm_source
FROM page_visits;


-- EXERCISE 2
SELECT DISTINCT(page_name)
FROM page_visits;

-- EXERCISE 3
-- How many first touches is each campaign responsible for?
WITH first_touch AS (
  SELECT user_id,
    MIN(timestamp) as first_touch_at
  FROM page_visits
  GROUP BY user_id),
    ft_attr as (SELECT ft.user_id,
    ft.first_touch_at,
    pv.utm_source,
    pv.utm_campaign
  FROM first_touch ft
    JOIN page_visits pv
      ON ft.user_id = pv.user_id
      AND ft.first_touch_at = pv.timestamp)
  SELECT ft_attr.utm_source,
       ft_attr.utm_campaign,
       COUNT(*)
FROM ft_attr
GROUP BY 1, 2
ORDER BY 3 DESC;

-- EXERCISE 4
-- How many last touches is each campaign responsible for?

WITH last_touch AS (
  SELECT user_id,
    Max(timestamp) as last_touch_at
  FROM page_visits
  GROUP BY user_id),
    lt_attr AS (
  SELECT lt.user_id,
    lt.last_touch_at,
    pv.utm_source,
    pv.utm_campaign
  FROM last_touch lt
    JOIN page_visits pv
      ON lt.user_id = pv.user_id
      AND lt.last_touch_at = pv.timestamp
)
SELECT utm_campaign,
  COUNT(last_touch_at)
FROM lt_attr
GROUP BY 1
order by 2 desc;

-- EXERCISE 5
-- How many visitors make a purchase? Count the distinct users who visited the page named 4 - purchase.
SELECT COUNT(DISTINCT(user_id)) AS 'purchases'
FROM page_visits
WHERE page_name = '4 - purchase';


-- EXERCISE 6
-- How many last touches on the purchase page is each campaign responsible for? This query will look similar to your last-touch query, but with an additional WHERE clause.
WITH last_touch AS (
SELECT user_id,
Max(timestamp) as last_touch_at
FROM page_visits
where page_name = ‘4 - purchase’
GROUP BY user_id),
lt_attr AS (
SELECT lt.user_id,
lt.last_touch_at,
pv.utm_source,
pv.utm_campaign
FROM last_touch lt
JOIN page_visits pv
ON lt.user_id = pv.user_id
AND lt.last_touch_at = pv.timestamp
)
SELECT page_name, count(distinct user_id)
from page_visits
where page_name = ‘4 - purchase’
group by 1
order by 3 desc;



-- EXERCISE 7
-- CoolTShirts can re-invest in 5 campaigns. Given your findings in the project, which should they pick and why?
SELECT utm_campaign,
COUNT(last_touch_at)
FROM lt_attr
GROUP BY 1
order by 2 desc
limit 5;
*/

-- WORKNG THROUGH YOUTUBE EXAMPLE
-- EXERCISE 1
-- number of distinct campaigns,
SELECT COUNT(DISTINCT utm_campaign)
FROM page_visits;

-- the number of distinct sources,
SELECT COUNT(DISTINCT utm_source)
FROM page_visits;

-- find how they are related.
SELECT DISTINCT utm_campaign, utm_source
FROM page_visits;


-- EXERCISE 2
-- What pages are on the CoolTShirts website?
SELECT DISTINCT page_name
FROM page_visits;

-- EXERCISE 3
-- How many first touches is each campaign responsible for?
WITH first_touch AS (
  SELECT user_id,
    MIN(timestamp) as first_touch_at
  FROM page_visits
  GROUP BY user_id)
SELECT ft.user_id,
  ft.first_touch_at,
  pv.utm_source,
  pv.utm_campaign,
  COUNT(utm_campaign)
FROM first_touch ft
JOIN page_visits pv
  ON ft.user_id = pv.user_id
  AND ft.first_touch_at = pv.timestamp
GROUP BY utm_campaign
ORDER BY 5 DESC;


-- EXERCISE 4
-- How many last touches is each campaign responsible for?
WITH last_touch AS (
  SELECT user_id,
    MAX(timestamp) as last_touch_at
  FROM page_visits
  GROUP BY user_id)
SELECT lt.user_id,
  lt.last_touch_at,
  pv.utm_source,
  pv.utm_campaign,
  COUNT(utm_campaign)
FROM last_touch lt
JOIN page_visits pv
  ON lt.user_id = pv.user_id
  AND lt.last_touch_at = pv.timestamp
GROUP BY utm_campaign
ORDER BY 5 DESC;

-- EXERCISE 5
-- How many visitors make a purchase?
SELECT COUNT(DISTINCT user_id)
FROM page_visits
WHERE page_name = '4 - purchase';

-- EXERCISE 6
-- How many last touches on the purchase page is each campaign responsible for?
WITH last_touch AS (
  SELECT user_id,
    MAX(timestamp) as last_touch_at
  FROM page_visits
  WHERE page_name = '4 - purchase'
  GROUP BY user_id)
SELECT lt.user_id,
  lt.last_touch_at,
  pv.utm_source,
  pv.utm_campaign,
  COUNT(utm_campaign)
FROM last_touch lt
JOIN page_visits pv
  ON lt.user_id = pv.user_id
  AND lt.last_touch_at = pv.timestamp
GROUP BY utm_campaign
ORDER BY 5 DESC;

-- EXERCISE 7
-- CoolTShirts can re-invest in 5 campaigns. Given your findings in the project, which should they pick and why?

-- should re-invest in weekly-newsletter, retargetting-ad, retargetting-campaign, paid-search, and ten-crazy-cool-tshirts campaign becuase they led to the most last-touch purchases. 


















